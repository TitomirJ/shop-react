import React from "react";
import {Input, Button, Select} from "antd";
import {Link} from "react-router-dom";
import { CheckOutlined } from '@ant-design/icons';
import {getCategories, getPhones} from "../../../selectors";
import {connect} from "react-redux";
import {fetchCategories, fetchPhones, addPhone} from "actions";
import UploadFile from "component/uploadFile";
import {uploadFileApi} from "api";
const { Option } = Select;
const { TextArea } = Input;

function getBase64(img, callback) {
    const reader = new FileReader();
    reader.addEventListener('load', () => callback(reader.result));
    reader.readAsDataURL(img);
}

class PhoneAddBlock extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            phone : {
                name: '',
                cpu: '',
                camera: '',
                size: '',
                weight: '',
                display: '',
                battery: '',
                memory: '',
                price: 500,
                description: '',
                categoryId: '',
                image: '',
                id: '',
            },
            imageUrl: ''
        }
    }
    componentDidMount() {
        this.props.fetchCategories();
        this.props.fetchPhones();
    }

    handleChangeEvent = (e) => {
        this.setState({
            phone : {
                ...this.state.phone,
                [e.target.name]: e.target.value
            },
        });
    };

    handleChangeSelect = (value) => {
        let id = Object.keys(this.props.phones).length += 1;
        this.setState({
            phone : {
                ...this.state.phone,
                categoryId: value,
                id: `${id}`
            }
        });
    };

    handleChangeUpload = (info) => {
        if (info.file.status === 'done') {
            this.props.uploadFileApi(info.file.originFileObj);
            getBase64(info.file.originFileObj, imageUrl =>
                this.setState({
                    phone: {
                        ...this.state.phone,
                        image: imageUrl
                    },
                    imageUrl: imageUrl,
                    loading: false,
                }),
            );
        }
    };

    btnSubmit = (event) => {
        event.preventDefault();
        let id = Object.keys(this.props.phones).length += 1;
        this.props.addPhone(this.state.phone, id);
        this.props.history.push('/admin');
    };

    renderFields = () => {
        return Object.keys(this.state.phone).slice(0,-4).map((key, value) =>
            <div className='p-0' key={key}>
                <div className='phone-title'>
                    <p>{key}</p>
                </div>
                <div className='phone-info'>
                    <Input
                        type="text"
                        onChange={this.handleChangeEvent}
                        name={key}
                    />
                </div>
            </div>
        )
    };

    render() {
        const {categories = []} = this.props;
        return (
            <div className='container'>
                <div className='row'>
                    <div className="col-6 mt-5">
                        <Link
                            to='/admin'
                            className='btn btn-basket-static'
                        >
                            <span>Back to Admin Panel</span>
                        </Link>
                        <Link
                            to='/'
                            className='btn btn-basket-static'
                        >
                            <span>Back to Store</span>
                        </Link>
                    </div>
                    <div className='col-6 mt-5'>
                        <h5 className='mb-5'>Add New Phone</h5>
                        <form>
                            <div className='inputWrapper'>
                                {this.renderFields()}
                                <div className='phone-title'>
                                    <p>category</p>
                                </div>
                                <div className='phone-info'>
                                    <Select className='w-100' onChange={this.handleChangeSelect}>
                                        {
                                            categories.map((data, index) =>
                                                <Option value={data.id} key={index} >{data.name}</Option>
                                            )
                                        }
                                    </Select>
                                </div>
                                <div className='phone-title'>
                                    <p>description</p>
                                </div>
                                <div className='phone-info'>
                                    <TextArea
                                        rows={6}
                                        value={this.state.phone.description}
                                        onChange={this.handleChangeEvent}
                                        name='description'
                                        className='w-100'
                                    />
                                </div>
                                <div className='phone-title'>
                                    <p>upload photo</p>
                                </div>
                                <div className='phone-info'>
                                    <UploadFile
                                        imageUrl={this.state.imageUrl}
                                        handleChangeUpload={this.handleChangeUpload}
                                        loading={this.state.loading}
                                    />
                                </div>
                            </div>
                            <div className="mt-5 mb-5">
                                <Button onClick={this.btnSubmit} className='d-inline-flex align-items-center justify-content-center' type="primary" block>
                                    finish
                                    <CheckOutlined />
                                </Button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        )
    }
}
const mapStateToProps = (state, ownProps) => ({
    phones: getPhones(state, ownProps),
    categories: getCategories(state),
});
const mapDispatchToProps = {
    fetchCategories,
    addPhone,
    fetchPhones,
    uploadFileApi
};

export default connect(
    mapStateToProps,
    mapDispatchToProps
)(PhoneAddBlock)